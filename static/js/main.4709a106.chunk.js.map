{"version":3,"sources":["images/shards-dashboards-logo.svg","store/constants.js","store/modules/sidebar/reducer.js","store/modules/sidebar/sidebar-nav-items.js","store/modules/rootReducer.js","store/index.js","components/layout/MainNavbar/NavbarToggle.js","components/layout/MainNavbar/MainNavbar.js","components/layout/MainSidebar/SidebarMainNavbar.js","components/layout/MainSidebar/SidebarNavItem.js","components/layout/MainSidebar/SidebarNavItems.js","components/layout/MainSidebar/MainSidebar.js","components/layout/MainFooter.js","layouts/Default.js","components/PageTitle/PageTitle.js","services/api.js","utils/index.js","components/DataContext/DataContext.js","utils/chart.js","components/SmallStats/SmallStat.js","data/kepler-data-template.js","components/SmallStats/SmallStats.js","components/DcCharts/ResetButton.js","components/DcCharts/ChartTemplate.js","components/DcCharts/DayOfWeekChart.js","components/DcCharts/HourOfDayChart.js","components/DcCharts/LinkedChartsTemplate.js","components/DcCharts/InteractionLineChart.js","components/KeplerMap/KeplerMap.js","components/DcCharts/KeplerAlerts.js","components/DcCharts/DcCharts.js","pages/WeeklyReport/weekly.js","store/actions.js","routes.js","styles/global.js","App.js","index.js"],"names":["module","exports","CHANGE","TOGGLE_SIDEBAR","ADD_CROSSFILTER_DATA_REQUEST","ADD_CROSSFILTER_DATA_SUCCESS","ADD_DIMENSION","ADD_DATE_HOUR_DIMENSION","ADD_HOUR_DIMENSION","ADD_DAY_OF_WEEK_DIMENSION","DC_CHART_FILTER_KEPLER_DATA","SMALL_STATS_FILTER_KEPLER_DATA","KEPLER_MOUNT_ADD_DATA_TO_MAP","UPDATE_CHART","ALLOWED_ALERT_TYPES","constants","initalState","menuVisible","navItems","title","to","htmlBefore","htmlAfter","combineReducers","keplerGl","keplerGlReducer","sidebar","state","type","middlewares","enhanceReduxMiddleware","enhancers","applyMiddleware","store","createStore","rootReducer","compose","NavbarToggle","dispatchAction","className","href","onClick","Constants","MainNavbar","stickyTop","dispatch","useDispatch","classes","classNames","data","defaultProps","connect","SidebarMainNavbar","hideLogoText","style","lineHeight","id","maxWidth","src","require","alt","SidebarNavItem","item","tag","RouteNavLink","SidebarNavItems","items","map","key","MainSidebar","md","size","MainFooter","contained","menuItems","copyright","fluid","Link","DefaultLayout","children","noNavbar","noFooter","offset","sm","PageTitle","subtitle","attrs","xs","api","axios","create","baseURL","dateUTCFormatParser","timeFormat","timeParse","utcFormat","utcParse","format","parseAlertTypeSubtype","subtype","parseNumberToPercentage","num","Number","toLocaleString","undefined","minimumFractionDigits","DataContext","React","createContext","DataProvider","props","loading","hasData","this","setState","url","aggFile","get","aggWeeks","week","date","Date","csv","then","forEach","d","entry","alertType","interactions","longitude","latitude","startTime","start_time","endTime","end_time","reliability","confidence","magvar","duration_min","kepler","Object","values","hours","utcHour","range","crossfilter","console","tron","log","agg","Provider","value","ref","parent","Component","Chart","defaults","LineWithLine","line","controllers","extend","draw","ease","prototype","call","chart","tooltip","_active","length","activePoint","ctx","x","tooltipPosition","topY","scales","top","bottomY","bottom","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","restore","SmallStat","canvasRef","createRef","chartData","chartLabels","propsChartOptions","chartOptions","propsChartConfig","chartConfig","maintainAspectRatio","responsive","legend","display","tooltips","enabled","custom","elements","point","radius","tension","xAxes","gridLines","ticks","yAxes","scaleLabel","isplay","suggestedMax","Math","max","labels","datasets","options","current","variation","label","percentage","increase","cardClasses","cardBodyClasses","innerWrapperClasses","dataFieldClasses","labelClasses","valueClasses","innerDataFieldClasses","percentageClasses","canvasHeight","small","height","shortid","info","fields","name","rows","SmallStats","smallStats","reduxHandler","useState","filters","setFilters","dimension","setDimension","alertTypes","setAlertTypes","statsData","setStatsData","useContext","useEffect","dsets","sData","Array","isArray","slice","query","keys","filter","REDUX_ENUMS","includes","push","statsDataKey","getStatLabel","fill","concat","currValue","oldValue","group","all","filterAll","dataTemplate","allFiltered","centerMap","redrawAll","a","sort","b","idx","alert","stats","theme","block","active","borderWidth","backgroundColor","borderColor","decrease","ResetButton","text","dc","Div","styled","div","ChartTemplate","chartFunction","titleClassName","resetClassName","resetText","updateChart","useRef","newChart","on","render","dayOfWeekFunc","dayOfWeekChart","startDay","getDay","endDay","ordering","elasticX","xAxis","DayOfWeekChart","hourOfDayFunc","hourOfDayChart","getHours","gap","scaleOrdinal","xUnits","ordinal","renderHorizontalGridLines","elasticY","yAxisLabel","xAxisLabel","g","i","tickValues","tickSizeOuter","yAxis","HourOfDayChart","chartName","div1","div2","secondChart","lineAndBarChartsFunc","alertsGroup","interactionsGroup","reduceSum","volumeChart","margins","right","left","centerBar","scaleTime","domain","round","alwaysUseRounding","lineChart","mouseZoomable","rangeChart","transitionDuration","utcHours","y","itemHeight","brushOn","InteractionLineChart","LinkedChartsTemplate","KeplerMap","minHeight","width","mapboxApiAccessToken","process","KeplerAlerts","DcCharts","keplerId","city","mapDispatch","forwardTo","addDataToMap","keplerMountAddData","dcChartFilterKeplerData","smallStatsFilterKeplerData","noGutters","baseUrl","Routes","cities","lastSunday","setDate","getUTCDate","getUTCDay","setUTCHours","setMinutes","setSeconds","getLastSunday","sunday","getSundayBefore","prefix","toJSON","replace","exact","from","path","fileName","Default","createGlobalStyle","App","basename","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4709a106.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shards-dashboards-logo.60a85991.svg\";","export default {\n  // sidebar enums\n  CHANGE: 'CHANGE',\n  TOGGLE_SIDEBAR: 'TOGGLE_SIDEBAR',\n  // weeklyData enums\n  ADD_CROSSFILTER_DATA_REQUEST: 'ADD_CROSSFILTER_DATA_REQUEST',\n  ADD_CROSSFILTER_DATA_SUCCESS: 'ADD_CROSSFILTER_DATA_SUCCESS',\n  ADD_DIMENSION: '@Weekly/ADD_DIMENSION',\n  ADD_DATE_HOUR_DIMENSION: '@InteractionLineChart/ADD_DATE_HOUR_DIMENSION',\n  ADD_HOUR_DIMENSION: '@HourOfDayChart/ADD_HOUR_DIMENSION',\n  ADD_DAY_OF_WEEK_DIMENSION: '@DayOfWeekChart/ADD_DAY_OF_WEEK_DIMENSION',\n  DC_CHART_FILTER_KEPLER_DATA: '@ChartTemplate/DC_CHART_FILTER_KEPLER_DATA',\n  SMALL_STATS_FILTER_KEPLER_DATA: '@SmallStats/SMALL_STATS_FILTER_KEPLER_DATA',\n  KEPLER_MOUNT_ADD_DATA_TO_MAP: '@KeplerAlerts/ADD_DATA_TO_MAP',\n  UPDATE_CHART: '@ChartTemplate/UPDATE_CHART',\n  // App enums\n  ALLOWED_ALERT_TYPES: [\n    'ACCIDENT',\n    'JAM',\n    'HAZARD_ON_ROAD_POT_HOLE',\n    'HAZARD_WEATHER_FLOOD',\n    'HAZARD_ON_ROAD_TRAFFIC_LIGHT_FAULT',\n  ]\n};\n","import constants from '../../constants';\nimport getSidebarNavItems from './sidebar-nav-items';\n\nconst { TOGGLE_SIDEBAR } = constants;\nconst initalState = { menuVisible: false, navItems: getSidebarNavItems() };\n\nexport default function sidebar(state = initalState, action) {\n  switch (action.type) {\n    case TOGGLE_SIDEBAR:\n      return { ...state, menuVisible: !state.menuVisible };\n    default:\n      return state;\n  }\n}\n","export default function() {\n  return [\n    {\n      title: 'Miraflores',\n      to: '/miraflores',\n      htmlBefore: '<i class=\"material-icons\">edit</i>',\n      htmlAfter: '',\n    },\n    {\n      title: 'Montevideo',\n      htmlBefore: '<i class=\"material-icons\">vertical_split</i>',\n      to: '/montevideo',\n    },\n    {\n      title: 'Quito',\n      htmlBefore: '<i class=\"material-icons\">note_add</i>',\n      to: '/quito',\n    },\n    {\n      title: 'São Paulo',\n      htmlBefore: '<i class=\"material-icons\">view_module</i>',\n      to: '/sao-paulo',\n    },\n    {\n      title: 'Xalapa',\n      htmlBefore: '<i class=\"material-icons\">table_chart</i>',\n      to: '/xalapa',\n    },\n  ];\n}\n","import { combineReducers } from 'redux';\nimport keplerGlReducer from 'kepler.gl/reducers';\n\nimport sidebar from './sidebar/reducer';\n\nexport default combineReducers({\n  keplerGl: keplerGlReducer,\n  sidebar,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { enhanceReduxMiddleware } from 'kepler.gl/middleware';\n\nimport rootReducer from './modules/rootReducer';\n\nconst middlewares = enhanceReduxMiddleware([]);\n/* const enhancers =\n  process.env.NODE_ENV === 'development'\n    ? [console.tron.createEnhancer(), applyMiddleware(...middlewares)]\n    : [applyMiddleware(...middlewares)];\n */\nconst enhancers = [applyMiddleware(...middlewares)];\n\nconst initialState = {};\n\nconst store = createStore(rootReducer, initialState, compose(...enhancers));\n\nexport { default as Constants } from './constants';\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Constants } from '../../../store';\n\nfunction NavbarToggle({ dispatchAction }) {\n  const handleClick = () => dispatchAction(Constants.TOGGLE_SIDEBAR);\n\n  return (\n    <nav className=\"nav\">\n      {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n      <a\n        href=\"#\"\n        onClick={handleClick}\n        className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-none text-center\"\n      >\n        <i className=\"material-icons\">&#xE5D2;</i>\n      </a>\n    </nav>\n  );\n}\n\nNavbarToggle.propTypes = {\n  dispatchAction: PropTypes.func.isRequired,\n};\n\nexport default NavbarToggle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect, useDispatch } from 'react-redux';\nimport classNames from 'classnames';\nimport { Container, Navbar } from 'shards-react';\n\nimport { Constants } from '../../../store';\n\n// import NavbarSearch from './NavbarSearch';\n// import NavbarNav from './NavbarNav/NavbarNav';\nimport NavbarToggle from './NavbarToggle';\n\nconst MainNavbar = ({ stickyTop }) => {\n  const dispatch = useDispatch();\n\n  function reduxHandler(type, data = null) {\n    switch (type) {\n      case Constants.TOGGLE_SIDEBAR:\n        dispatch({\n          type: Constants.TOGGLE_SIDEBAR,\n          data,\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const classes = classNames(\n    'main-navbar',\n    'bg-white',\n    stickyTop && 'sticky-top'\n  );\n\n  return (\n    <div className={classes}>\n      <Container className=\"p-0\">\n        <Navbar\n          type=\"light\"\n          className=\"align-items-stretch flex-md-nowrap p-0 d-sm-flex d-md-none\"\n        >\n          {/* <NavbarSearch /> */}\n          {/* <NavbarNav /> */}\n          <NavbarToggle dispatchAction={reduxHandler} />\n        </Navbar>\n      </Container>\n    </div>\n  );\n};\n\nMainNavbar.propTypes = {\n  /**\n   * The layout type where the MainNavbar is used.\n   */\n  // layout: PropTypes.string,\n  /**\n   * Whether the main navbar is sticky to the top, or not.\n   */\n  stickyTop: PropTypes.bool,\n};\n\nMainNavbar.defaultProps = {\n  stickyTop: true,\n};\n\nexport default connect()(MainNavbar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Navbar, NavbarBrand } from 'shards-react';\n\nimport { Constants } from '../../../store';\n\nfunction SidebarMainNavbar({ hideLogoText, dispatchAction }) {\n  const handleToggleSidebar = () => dispatchAction(Constants.TOGGLE_SIDEBAR);\n\n  return (\n    <div className=\"main-navbar\">\n      <Navbar\n        className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n        type=\"light\"\n      >\n        <NavbarBrand\n          className=\"w-100 mr-0\"\n          href=\"#\"\n          style={{ lineHeight: '25px' }}\n        >\n          <div className=\"d-table m-auto\">\n            <img\n              id=\"main-logo\"\n              className=\"d-inline-block align-top mr-1\"\n              style={{ maxWidth: '25px' }}\n              src={require('../../../images/shards-dashboards-logo.svg')}\n              alt=\"Shards Dashboard\"\n            />\n            {!hideLogoText && (\n              <span className=\"d-none d-md-inline ml-1\">Shards Dashboard</span>\n            )}\n          </div>\n        </NavbarBrand>\n        {/* eslint-disable-next-line */}\n        <a\n          className=\"toggle-sidebar d-sm-inline d-md-none\"\n          onClick={handleToggleSidebar}\n        >\n          <i className=\"material-icons\">&#xE5C4;</i>\n        </a>\n      </Navbar>\n    </div>\n  );\n}\n\nSidebarMainNavbar.propTypes = {\n  dispatchAction: PropTypes.func.isRequired,\n  /**\n   * Whether to hide the logo text, or not.\n   */\n  hideLogoText: PropTypes.bool,\n};\n\nSidebarMainNavbar.defaultProps = {\n  hideLogoText: false,\n};\n\nexport default SidebarMainNavbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink as RouteNavLink } from 'react-router-dom';\nimport { NavItem, NavLink } from 'shards-react';\n\nconst SidebarNavItem = ({ item }) => (\n  <NavItem>\n    <NavLink tag={RouteNavLink} to={item.to}>\n      {item.title && <span>{item.title}</span>}\n    </NavLink>\n  </NavItem>\n);\n\nSidebarNavItem.propTypes = {\n  /**\n   * The item object.\n   */\n  item: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default SidebarNavItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Nav } from 'shards-react';\n\nimport SidebarNavItem from './SidebarNavItem';\n\nfunction SidebarNavItems({ items }) {\n  return (\n    <div className=\"nav-wrapper\">\n      <Nav className=\"nav--no-borders flex-column\">\n        {items.map(item => (\n          <SidebarNavItem key={item.title} item={item} />\n        ))}\n      </Nav>\n    </div>\n  );\n}\n\nSidebarNavItems.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.element).isRequired,\n};\n\nexport default SidebarNavItems;\n","import React from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Col } from 'shards-react';\n\nimport { Constants } from '../../../store';\n\nimport SidebarMainNavbar from './SidebarMainNavbar';\n// import SidebarSearch from './SidebarSearch';\nimport SidebarNavItems from './SidebarNavItems';\n\nfunction MainSidebar({ menuVisible, items, hideLogoText }) {\n  const dispatch = useDispatch();\n\n  function reduxHandler(type, data = null) {\n    switch (type) {\n      case Constants.TOGGLE_SIDEBAR:\n        dispatch({\n          type: Constants.TOGGLE_SIDEBAR,\n          data,\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const classes = classNames(\n    'main-sidebar',\n    'px-0',\n    'col-12',\n    menuVisible && 'open'\n  );\n\n  return (\n    <Col tag=\"aside\" className={classes} md={{ size: 2 }}>\n      <SidebarMainNavbar\n        hideLogoText={hideLogoText}\n        dispatchAction={reduxHandler}\n      />\n      {/* <SidebarSearch /> */}\n      <SidebarNavItems items={items} />\n    </Col>\n  );\n}\n\nMainSidebar.propTypes = {\n  menuVisible: PropTypes.bool,\n  items: PropTypes.arrayOf(PropTypes.element),\n  /**\n   * Whether to hide the logo text, or not.\n   */\n  hideLogoText: PropTypes.bool,\n};\n\nMainSidebar.defaultProps = {\n  menuVisible: false,\n  items: [],\n  hideLogoText: false,\n};\n\nconst mapStateToProps = state => ({\n  menuVisible: state.sidebar.menuVisible,\n  items: state.sidebar.navItems,\n});\n\nexport default connect(mapStateToProps)(MainSidebar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Nav, NavItem, NavLink } from 'shards-react';\nimport { Link } from 'react-router-dom';\n\nconst MainFooter = ({ contained, menuItems, copyright }) => (\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\n    <Container fluid={contained}>\n      <Row>\n        <Nav>\n          {menuItems.map(item => (\n            <NavItem key={item.title}>\n              <NavLink tag={Link} to={item.to}>\n                {item.title}\n              </NavLink>\n            </NavItem>\n          ))}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.propTypes = {\n  /**\n   * Whether the content is contained, or not.\n   */\n  contained: PropTypes.bool,\n  /**\n   * The menu items array.\n   */\n  menuItems: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\n  /**\n   * The copyright info.\n   */\n  copyright: PropTypes.string,\n};\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: 'Copyright © 2018 DesignRevision',\n  menuItems: [\n    {\n      title: 'Home',\n      to: '#',\n    },\n    {\n      title: 'Services',\n      to: '#',\n    },\n    {\n      title: 'About',\n      to: '#',\n    },\n    {\n      title: 'Products',\n      to: '#',\n    },\n    {\n      title: 'Blog',\n      to: '#',\n    },\n  ],\n};\n\nexport default MainFooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col } from 'shards-react';\n\nimport MainNavbar from '../components/layout/MainNavbar/MainNavbar';\nimport MainSidebar from '../components/layout/MainSidebar/MainSidebar';\nimport MainFooter from '../components/layout/MainFooter';\n\nconst DefaultLayout = ({ children, noNavbar, noFooter }) => (\n  <Container fluid>\n    <Row>\n      <MainSidebar />\n      <Col\n        className=\"main-content p-0\"\n        md={{ size: 10, offset: 2 }}\n        sm=\"12\"\n        tag=\"main\"\n      >\n        {!noNavbar && <MainNavbar />}\n        {children}\n        {!noFooter && <MainFooter />}\n      </Col>\n    </Row>\n  </Container>\n);\n\nDefaultLayout.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  /**\n   * Whether to display the navbar, or not.\n   */\n  noNavbar: PropTypes.bool,\n  /**\n   * Whether to display the footer, or not.\n   */\n  noFooter: PropTypes.bool,\n};\n\nDefaultLayout.defaultProps = {\n  noNavbar: false,\n  noFooter: false,\n};\n\nexport default DefaultLayout;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Col } from 'shards-react';\n\nconst PageTitle = ({ title, subtitle, className, ...attrs }) => {\n  const classes = classNames(\n    className,\n    'text-center',\n    'text-md-left',\n    'mb-sm-0'\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"4\" className={classes} {...attrs}>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h2 className=\"page-title\">{title}</h2>\n    </Col>\n  );\n};\n\nPageTitle.propTypes = {\n  /**\n   * The page title.\n   */\n  title: PropTypes.string,\n  /**\n   * The page subtitle.\n   */\n  subtitle: PropTypes.string,\n};\n\nexport default PageTitle;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://hugo-data.s3.us-east-2.amazonaws.com'\n});\n\nexport default api;\n","import { timeFormat, timeParse, utcFormat, utcParse, format } from 'd3';\n\nexport const dateFormatSpecifier = '%m/%d/%Y';\nexport const dateFormat = timeFormat(dateFormatSpecifier);\nexport const dateFormatParser = timeParse(dateFormatSpecifier);\n\nexport const dateUTCFormatSpecifier = '%Y-%m-%d %H:%M:%S.%L';\nexport const dateUTCFormat = utcFormat(dateUTCFormatSpecifier);\nexport const dateUTCFormatParser = utcParse(dateUTCFormatSpecifier);\n\nexport const numberFormat = format('.2f');\n\nexport function parseAlertTypeSubtype(type, subtype) {\n  switch (type) {\n    case 'ACCIDENT':\n      return 'accident';\n    case 'JAM':\n      return 'jam';\n    case 'WEATHERHAZARD':\n      switch (subtype) {\n        case 'HAZARD_ON_ROAD_POT_HOLE':\n          return 'potHole';\n        case 'HAZARD_WEATHER_FLOOD':\n          return 'flood';\n        case 'HAZARD_ON_ROAD_TRAFFIC_LIGHT_FAULT':\n          return 'trafficLight';\n        default:\n          return 'others';\n      }\n    default:\n      return 'others';\n  }\n}\n\nexport function last(array) {\n  return array[array.length - 1];\n}\n\nexport function getLastSunday() {\n  const d = new Date();\n  d.setDate(d.getUTCDate() - d.getUTCDay());\n  d.setUTCHours(12);\n  d.setMinutes(0);\n  d.setSeconds(0);\n  return d;\n}\n\nexport function getSundayBefore(sunday) {\n  const d = sunday;\n  d.setDate(d.getUTCDate() - 7);\n  return d;\n}\n\nfunction parseNumberToPercentage(num) {\n  return Number(num).toLocaleString(undefined, {\n    style: 'percent',\n    minimumFractionDigits: 1,\n  });\n}\n\nexport function getPercentage(currValue, oldValue) {\n  if (oldValue === 0) {\n    return parseNumberToPercentage(0);\n  }\n  return parseNumberToPercentage((currValue - oldValue) / oldValue);\n}\n\nexport function getStatLabel(type) {\n  switch (type) {\n    case 'ACCIDENT':\n      return 'Accident';\n    case 'JAM':\n      return 'Jam';\n    case 'HAZARD_ON_ROAD_POT_HOLE':\n      return 'Pot Hole';\n    case 'HAZARD_WEATHER_FLOOD':\n      return 'Flood';\n    case 'HAZARD_ON_ROAD_TRAFFIC_LIGHT_FAULT':\n      return 'Traffic Light';\n    default:\n      return 'others';\n  }\n}\n","import React, { Component } from 'react';\nimport crossfilter from 'crossfilter2';\nimport { csv, utcHour } from 'd3';\nimport 'dc/dc.css';\n\nimport api from '../../services/api';\nimport { dateUTCFormatParser, parseAlertTypeSubtype } from '../../utils';\n\nexport const DataContext = React.createContext({ data: {} });\n\nexport class DataProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loading: false, hasData: false };\n  }\n\n  async componentDidMount() {\n    const { loading, hasData } = this.state;\n    if (hasData || loading) {\n      return;\n    }\n    this.setState({ loading: true });\n    const { url, aggFile } = this.props;\n    const { data:aggWeeks } = await api.get(aggFile);\n    this.aggWeeks = aggWeeks.map(week => {\n      week.date = new Date(week.date);\n      return week;\n    });\n    // Generalizar isso aqui\n    csv(url).then(data => {\n      // csv('./ndx.csv').then(data => {\n      data.forEach(d => {\n        const entry = d;\n        entry.alertType = parseAlertTypeSubtype(d.type, d.subtype);\n        entry.interactions = +d.interactions;\n        entry.longitude = +d.longitude;\n        entry.latitude = +d.latitude;\n        entry.startTime = dateUTCFormatParser(d.start_time);\n        entry.endTime = dateUTCFormatParser(d.end_time);\n        entry.reliability = +d.reliability;\n        entry.confidence = +d.confidence;\n        entry.magvar = +d.magvar;\n        entry.duration_min = +d.duration_min;\n        entry.kepler = Object.values(entry);\n        entry.hours = utcHour.range(\n          utcHour(d.startTime),\n          utcHour.offset(utcHour(d.endTime), 1)\n        );\n      });\n\n      this.data = crossfilter(data); // TODO possibly need to update this\n      this.setState({ loading: false, hasData: true });\n    });\n  }\n\n  render() {\n    console.tron.log(this.agg);\n    const { hasData } = this.state;\n    const { children } = this.props;\n\n    if (!hasData) {\n      return null;\n    }\n    return (\n      <DataContext.Provider value={{ data: this.data, aggWeeks: this.aggWeeks }}>\n        <div ref={this.parent}>{children}</div>\n      </DataContext.Provider>\n    );\n  }\n}\n","import Chart from 'chart.js';\n\nChart.defaults.LineWithLine = Chart.defaults.line;\nChart.controllers.LineWithLine = Chart.controllers.line.extend({\n  draw(ease) {\n    Chart.controllers.line.prototype.draw.call(this, ease);\n\n    if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\n      const activePoint = this.chart.tooltip._active[0];\n      const { ctx } = this.chart;\n      const { x } = activePoint.tooltipPosition();\n      const topY = this.chart.scales['y-axis-0'].top;\n      const bottomY = this.chart.scales['y-axis-0'].bottom;\n\n      // Draw the line\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(x, topY);\n      ctx.lineTo(x, bottomY);\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = '#ddd';\n      ctx.stroke();\n      ctx.restore();\n    }\n  },\n});\n\nexport default Chart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport shortid from 'shortid';\nimport { Card, CardBody } from 'shards-react';\n\nimport Chart from '../../utils/chart';\n\nclass SmallStat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      chartData,\n      chartLabels,\n      chartOptions: propsChartOptions,\n      chartConfig: propsChartConfig,\n    } = this.props;\n\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                isplay: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: Math.max(...chartData[0].data) + 1,\n              },\n            },\n          ],\n        },\n      },\n      ...propsChartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: 'line',\n        data: {\n          ...{\n            labels: chartLabels,\n          },\n          ...{\n            datasets: chartData,\n          },\n        },\n        options: chartOptions,\n      },\n      ...propsChartConfig,\n    };\n\n    new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  render() {\n    const { variation, label, value, percentage, increase } = this.props;\n\n    const cardClasses = classNames(\n      'stats-small',\n      variation && `stats-small--${variation}`\n    );\n\n    const cardBodyClasses = classNames(\n      variation === '1' ? 'p-0 d-flex' : 'px-0 pb-0'\n    );\n\n    const innerWrapperClasses = classNames(\n      'd-flex',\n      variation === '1' ? 'flex-column m-auto' : 'px-3'\n    );\n\n    const dataFieldClasses = classNames(\n      'stats-small__data',\n      variation === '1' && 'text-center'\n    );\n\n    const labelClasses = classNames(\n      'stats-small__label',\n      'text-uppercase',\n      variation !== '1' && 'mb-1'\n    );\n\n    const valueClasses = classNames(\n      'stats-small__value',\n      'count',\n      variation === '1' ? 'my-3' : 'm-0'\n    );\n\n    const innerDataFieldClasses = classNames(\n      'stats-small__data',\n      variation !== '1' && 'text-right align-items-center'\n    );\n\n    const percentageClasses = classNames(\n      'stats-small__percentage',\n      `stats-small__percentage--${increase ? 'increase' : 'decrease'}`\n    );\n\n    const canvasHeight = variation === '1' ? 120 : 60;\n\n    return (\n      <Card small className={cardClasses}>\n        <CardBody className={cardBodyClasses}>\n          <div className={innerWrapperClasses}>\n            <div className={dataFieldClasses}>\n              <span className={labelClasses}>{label}</span>\n              <h6 className={valueClasses}>{value}</h6>\n            </div>\n            <div className={innerDataFieldClasses}>\n              <span className={percentageClasses}>{percentage}</span>\n            </div>\n          </div>\n          <canvas\n            height={canvasHeight}\n            ref={this.canvasRef}\n            className={`stats-small-${shortid()}`}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nSmallStat.propTypes = {\n  /**\n   * The Small Stats variation.\n   */\n  variation: PropTypes.string,\n  /**\n   * The label.\n   */\n  label: PropTypes.string,\n  /**\n   * The value.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The percentage number or string.\n   */\n  percentage: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Whether is a value increase, or not.\n   */\n  increase: PropTypes.bool,\n  /**\n   * The Chart.js configuration object.\n   */\n  chartConfig: PropTypes.object,\n  /**\n   * The Chart.js options object.\n   */\n  chartOptions: PropTypes.object,\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.array.isRequired,\n  /**\n   * The chart labels.\n   */\n  chartLabels: PropTypes.array,\n};\n\nSmallStat.defaultProps = {\n  variation: '',\n  increase: true,\n  percentage: 0,\n  value: 0,\n  label: 'Label',\n  chartOptions: Object.create(null),\n  chartConfig: Object.create(null),\n  chartData: [],\n  chartLabels: [],\n};\n\nexport default SmallStat;\n","// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default {\n  info: {\n    label: 'Alerts',\n    id: 'alerts',\n  },\n  data: {\n    fields: [\n      {\n        name: 'uuid',\n      },\n      {\n        name: 'type',\n      },\n      {\n        name: 'subtype',\n      },\n      {\n        name: 'interactions',\n      },\n      {\n        name: 'street',\n      },\n      {\n        name: 'longitude',\n      },\n      {\n        name: 'latitude',\n      },\n      {\n        name: 'start_time',\n      },\n      {\n        name: 'end_time',\n      },\n      {\n        name: 'reliability',\n      },\n      {\n        name: 'confidence',\n      },\n      {\n        name: 'magvar',\n      },\n      {\n        name: 'duration_min',\n      },\n    ],\n    rows: [],\n  },\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport { redrawAll } from 'dc';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Button } from 'shards-react';\n\nimport { DataContext } from '../DataContext';\nimport SmallStat from './SmallStat';\nimport dataTemplate from '../../data/kepler-data-template';\nimport REDUX_ENUMS from '../../store/constants';\nimport { getPercentage, getStatLabel } from '../../utils';\n\nfunction statsDataKey(type) {\n  switch (type) {\n    case 'ACCIDENT':\n      return 'accident';\n    case 'JAM':\n      return 'jam';\n    case 'HAZARD_ON_ROAD_POT_HOLE':\n      return 'potHole';\n    case 'HAZARD_WEATHER_FLOOD':\n      return 'flood';\n    case 'HAZARD_ON_ROAD_TRAFFIC_LIGHT_FAULT':\n      return 'trafficLight';\n    default:\n      return 'others';\n  }\n}\n\nconst SmallStats = ({ smallStats, reduxHandler }) => {\n  const [filters, setFilters] = useState([]);\n  const [dimension, setDimension] = useState(null);\n  const [alertTypes, setAlertTypes] = useState([]);\n  const [statsData, setStatsData] = useState({});\n  const { data, aggWeeks } = useContext(DataContext);\n\n  useEffect(() => {\n    const dsets = {};\n    const sData = {};\n    if (Array.isArray(aggWeeks) && aggWeeks.length) {\n      aggWeeks.slice(-6).map(week => {\n        if (week.query === 'ALERTS') {\n          Object.keys(week.agg)\n            .filter(type => REDUX_ENUMS.ALLOWED_ALERT_TYPES.includes(type))\n            .map(type => {\n              if (type in dsets) {\n                dsets[type].push(week.agg[type]);\n              } else {\n                dsets[type] = [week.agg[type]];\n              }\n              return type;\n            });\n        }\n        return week;\n      });\n      Object.keys(dsets).map(type => {\n        const key = statsDataKey(type);\n        sData[key] = {};\n        sData[key].label = getStatLabel(type);\n        sData[key].datasets =\n          dsets[type].length < 6\n            ? new Array(6 - dsets[type].length).fill(0).concat(dsets[type])\n            : dsets[type];\n        [sData[key].value] = sData[key].datasets.slice(-1);\n        sData[key].percentage = getPercentage(\n          sData[key].datasets.slice(-1)[0],\n          sData[key].datasets.slice(-2)[0]\n        );\n        sData[key].increase =\n          sData[key].datasets.slice(-1)[0] >= sData[key].datasets.slice(-2)[0];\n        return type;\n      });\n    }\n    setStatsData(sData);\n  }, [aggWeeks]);\n\n  // We want to define dimesion only once, then keep it\n  useEffect(() => {\n    setDimension(data.dimension(d => d.alertType));\n  }, [data]);\n\n  // Get the alertTypes when dimesion is defined\n  useEffect(() => {\n    setAlertTypes(dimension ? dimension.group().all() : []);\n  }, [dimension]);\n\n  useEffect(() => {\n    if (dimension) {\n      if (Array.isArray(filters) && filters.length) {\n        dimension.filter(alertType => filters.includes(alertType));\n      } else {\n        dimension.filterAll();\n      }\n      dataTemplate.data.rows = data.allFiltered().map(d => d.kepler);\n      reduxHandler(REDUX_ENUMS.SMALL_STATS_FILTER_KEPLER_DATA, {\n        datasets: dataTemplate,\n        options: {\n          centerMap: true,\n        },\n      });\n      redrawAll();\n      return () => {\n        dimension.filterAll();\n      };\n    }\n    return () => {};\n  }, [filters]);\n\n  return (\n    <>\n      <Row>\n        {alertTypes\n          .filter(a => a.key !== 'others')\n          .sort((a, b) => b.value - a.value)\n          .map(({ key: alert, value }, idx) => {\n            const stats = smallStats[idx];\n            stats.label = statsData[alert].label;\n            stats.value = statsData[alert].value;\n            stats.datasets[0].data = statsData[alert].datasets;\n            stats.percentage = statsData[alert].percentage;\n            stats.increase = statsData[alert].increase;\n            return (\n              <Col className=\"col-lg mb-4\" key={alert} {...stats.attrs}>\n                <SmallStat\n                  id={`small-stats-${idx}`}\n                  variation=\"1\"\n                  chartData={stats.datasets}\n                  chartLabels={stats.chartLabels}\n                  label={stats.label}\n                  value={stats.value}\n                  percentage={stats.percentage}\n                  increase={stats.increase}\n                />\n                <Button\n                  key={alert}\n                  theme=\"info\"\n                  // size=\"lg\"\n                  block\n                  className=\"mt-2\"\n                  active={!!filters.includes(alert)}\n                  onClick={() => {\n                    if (filters.includes(alert)) {\n                      setFilters(filters.filter(a => a !== alert));\n                    } else {\n                      setFilters([...filters, alert]);\n                    }\n                  }}\n                >\n                  <span style={{ 'font-size': 'larger' }}>Filter</span>\n                </Button>\n              </Col>\n            );\n          })}\n      </Row>\n    </>\n  );\n};\n\nSmallStats.propTypes = {\n  smallStats: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      value: PropTypes.string,\n      percentage: PropTypes.string,\n      increase: PropTypes.bool,\n      decrease: PropTypes.bool,\n      chartLabels: PropTypes.arrayOf(PropTypes.string),\n      attrs: PropTypes.objectOf(PropTypes.string),\n      datasets: PropTypes.arrayOf(\n        PropTypes.shape({\n          label: PropTypes.string,\n          fill: PropTypes.string,\n          borderWidth: PropTypes.number,\n          backgroundColor: PropTypes.string,\n          borderColor: PropTypes.string,\n          data: PropTypes.arrayOf(PropTypes.number),\n        })\n      ),\n    })\n  ),\n  reduxHandler: PropTypes.func.isRequired,\n};\n\nSmallStats.defaultProps = {\n  smallStats: [\n    {\n      label: 'Posts',\n      value: '2,390',\n      percentage: '4.7%',\n      increase: true,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: '6', sm: '6' },\n      datasets: [\n        {\n          label: 'Today',\n          fill: 'start',\n          borderWidth: 1.5,\n          backgroundColor: 'rgba(0, 184, 216, 0.1)',\n          borderColor: 'rgb(0, 184, 216)',\n          data: [1, 2, 1, 3, 5, 4, 7],\n        },\n      ],\n    },\n    {\n      label: 'Pages',\n      value: '182',\n      percentage: '12.4',\n      increase: true,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: '6', sm: '6' },\n      datasets: [\n        {\n          label: 'Today',\n          fill: 'start',\n          borderWidth: 1.5,\n          backgroundColor: 'rgba(23,198,113,0.1)',\n          borderColor: 'rgb(23,198,113)',\n          data: [1, 2, 3, 3, 3, 4, 4],\n        },\n      ],\n    },\n    {\n      label: 'Comments',\n      value: '8,147',\n      percentage: '3.8%',\n      increase: false,\n      decrease: true,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: '4', sm: '6' },\n      datasets: [\n        {\n          label: 'Today',\n          fill: 'start',\n          borderWidth: 1.5,\n          backgroundColor: 'rgba(255,180,0,0.1)',\n          borderColor: 'rgb(255,180,0)',\n          data: [2, 3, 3, 3, 4, 3, 3],\n        },\n      ],\n    },\n    {\n      label: 'New Customers',\n      value: '29',\n      percentage: '2.71%',\n      increase: false,\n      decrease: true,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: '4', sm: '6' },\n      datasets: [\n        {\n          label: 'Today',\n          fill: 'start',\n          borderWidth: 1.5,\n          backgroundColor: 'rgba(255,65,105,0.1)',\n          borderColor: 'rgb(255,65,105)',\n          data: [1, 7, 1, 3, 1, 4, 8],\n        },\n      ],\n    },\n    {\n      label: 'Subscribers',\n      value: '17,281',\n      percentage: '2.4%',\n      increase: false,\n      decrease: true,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: '4', sm: '6' },\n      datasets: [\n        {\n          label: 'Today',\n          fill: 'start',\n          borderWidth: 1.5,\n          backgroundColor: 'rgb(0,123,255,0.1)',\n          borderColor: 'rgb(0,123,255)',\n          data: [3, 2, 3, 2, 4, 5, 4],\n        },\n      ],\n    },\n  ],\n};\n\nexport default SmallStats;\n","import React from 'react';\nimport * as dc from 'dc';\nimport { Button } from 'shards-react';\n\nexport const ResetButton = ({\n  chart,\n  text,\n  className = '',\n  theme = 'warning',\n  size = '',\n}) => {\n  return (\n    <Button\n      theme={theme}\n      size={size}\n      className={className}\n      onClick={() => {\n        chart.filterAll();\n        dc.redrawAll();\n      }}\n    >\n      {text}\n    </Button>\n  );\n};\n","import React, { useState, useContext, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Card, CardHeader, CardBody, CardTitle } from 'shards-react';\nimport styled from 'styled-components';\n\nimport { DataContext } from '../DataContext';\nimport { ResetButton } from './ResetButton';\nimport dataTemplate from '../../data/kepler-data-template';\nimport REDUX_ENUMS from '../../store/constants';\n\nconst Div = styled.div`\n    width: 100%;\n    height: auto;\n    box-sizing: border-box;\n    padding: 5px;\n    & label: {\n      textTransform: 'capitalize',\n      textDecoration: 'underline',\n    }\n`;\n\nconst ChartTemplate = ({\n  chartFunction,\n  title,\n  reduxHandler,\n  className,\n  titleClassName,\n  resetClassName,\n  resetText,\n}) => {\n  /*\n    We render the dc chart using an effect. We want to pass the chart as a prop\n    after the dc call, but there is nothing by default to trigger a re-render and\n    the prop, by default would be undefined.\n    To solve this, we hold a state key and increment it after the effect ran.\n    By passing the key to the parent div, we get a rerender once the chart is defined.\n    */\n\n  const [chart, updateChart] = useState(null);\n  const { data } = useContext(DataContext);\n  const div = useRef(null);\n\n  useEffect(() => {\n    // chartfunction takes the ref and does something with it\n    const newChart = chartFunction({ div: div.current, data });\n\n    newChart.on('filtered', () => {\n      dataTemplate.data.rows = data.allFiltered().map(d => d.kepler);\n      return reduxHandler(REDUX_ENUMS.DC_CHART_FILTER_KEPLER_DATA, {\n        datasets: dataTemplate,\n        options: {\n          centerMap: true,\n        },\n      });\n    });\n    newChart.render();\n    updateChart(newChart);\n  }, []);\n\n  return (\n    <Card>\n      <CardHeader className=\"border-bottom\">\n        <Row className=\"align-items-center\">\n          <Col xs={8}>\n            <CardTitle className={titleClassName}>{title}</CardTitle>\n          </Col>\n          <Col>\n            <ResetButton\n              chart={chart}\n              text={resetText}\n              className={resetClassName}\n            />\n          </Col>\n        </Row>\n      </CardHeader>\n      <CardBody className={className}>\n        <Div ref={div} />\n      </CardBody>\n    </Card>\n  );\n};\n\nChartTemplate.propTypes = {\n  chartFunction: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  reduxHandler: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  titleClassName: PropTypes.string,\n  resetClassName: PropTypes.string,\n  resetText: PropTypes.string,\n};\n\nChartTemplate.defaultProps = {\n  className: 'p-1',\n  titleClassName: '',\n  resetClassName: 'd-flex ml-auto',\n  resetText: 'Reset',\n};\n\nexport default ChartTemplate;\n","import React from 'react';\nimport * as dc from 'dc';\nimport PropTypes from 'prop-types';\n\nimport ChartTemplate from './ChartTemplate';\n\nconst dayOfWeekFunc = ({ div, data }) => {\n  const dayOfWeekChart = dc.rowChart(div);\n\n  const dimension = data.dimension(d => {\n    const startDay = d.startTime.getDay();\n    const endDay = d.endTime.getDay();\n    const name = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    if (startDay === endDay) {\n      return [`${startDay}.${name[startDay]}`];\n    }\n    return [`${startDay}.${name[startDay]}`, `${endDay}.${name[endDay]}`];\n  }, true);\n  const group = dimension.group();\n\n  dayOfWeekChart\n    .dimension(dimension)\n    .group(group)\n    .ordering(dc.pluck('key'))\n    .elasticX(true)\n    .label(({ key }) => key.slice(2, key.length + 1))\n    .xAxis()\n    .ticks(5);\n\n  return dayOfWeekChart;\n};\n\nconst DayOfWeekChart = ({ reduxHandler }) => (\n  <ChartTemplate\n    chartFunction={dayOfWeekFunc}\n    title=\"Weekday\"\n    reduxHandler={reduxHandler}\n  />\n);\n\nDayOfWeekChart.propTypes = {\n  reduxHandler: PropTypes.func.isRequired,\n};\n\nexport default DayOfWeekChart;\n","import React from 'react';\nimport * as dc from 'dc';\nimport { scaleOrdinal } from 'd3';\nimport PropTypes from 'prop-types';\n\nimport ChartTemplate from './ChartTemplate';\n\nconst hourOfDayFunc = ({ div, data }) => {\n  const hourOfDayChart = dc.barChart(div);\n  const dimension = data.dimension(\n    d => d.hours.map(date => date.getHours()),\n    true\n  );\n  const group = dimension.group();\n\n  hourOfDayChart\n    .dimension(dimension)\n    .group(group)\n    .gap(2)\n    .x(scaleOrdinal())\n    .xUnits(dc.units.ordinal)\n    .height(250)\n    .renderHorizontalGridLines(true)\n    .elasticY(true)\n    .yAxisLabel('Total Alerts')\n    .xAxisLabel('Hour');\n\n  const ticks = group.all().map((g, i) => (!(i % 2) ? g.key : null));\n\n  hourOfDayChart\n    .xAxis()\n    .tickValues(ticks)\n    .tickSizeOuter(0);\n\n  hourOfDayChart.yAxis().ticks(5);\n\n  return hourOfDayChart;\n};\n\nconst HourOfDayChart = ({ reduxHandler }) => (\n  <ChartTemplate\n    chartFunction={hourOfDayFunc}\n    chartName=\"HourOfDay\"\n    title=\"Active Alerts by Hour\"\n    reduxHandler={reduxHandler}\n  />\n);\n\nHourOfDayChart.propTypes = {\n  reduxHandler: PropTypes.func.isRequired,\n};\n\nexport default HourOfDayChart;\n","import React, { useState, useContext, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Card, CardHeader, CardBody, CardTitle } from 'shards-react';\nimport styled from 'styled-components';\n\nimport { DataContext } from '../DataContext';\nimport { ResetButton } from './ResetButton';\nimport dataTemplate from '../../data/kepler-data-template';\nimport REDUX_ENUMS from '../../store/constants';\n\nconst Div = styled.div`\n    width: 100%;\n    height: auto;\n    box-sizing: border-box;\n    padding: 5px;\n    & label: {\n      textTransform: 'capitalize',\n      textDecoration: 'underline',\n    }\n`;\n\nconst ChartTemplate = ({\n  chartFunction,\n  title,\n  reduxHandler,\n  className,\n  titleClassName,\n  resetClassName,\n  resetText,\n}) => {\n  /*\n    We render the dc chart using an effect. We want to pass the chart as a prop\n    after the dc call, but there is nothing by default to trigger a re-render and\n    the prop, by default would be undefined.\n    To solve this, we hold a state key and increment it after the effect ran.\n    By passing the key to the parent div, we get a rerender once the chart is defined.\n    */\n\n  const [chart, updateChart] = useState(null);\n  const { data } = useContext(DataContext);\n  const div1 = useRef(null);\n  const div2 = useRef(null);\n\n  useEffect(() => {\n    // chartfunction takes the ref and does something with it\n    const [newChart, secondChart] = chartFunction({\n      div1: div1.current,\n      div2: div2.current,\n      data,\n    });\n\n    newChart.on('filtered', () => {\n      dataTemplate.data.rows = data.allFiltered().map(d => d.kepler);\n      return reduxHandler(REDUX_ENUMS.DC_CHART_FILTER_KEPLER_DATA, {\n        datasets: dataTemplate,\n        options: {\n          centerMap: true,\n        },\n      });\n    });\n\n    newChart.render();\n    secondChart.render();\n\n    updateChart(newChart);\n  }, []);\n\n  return (\n    <Card>\n      <CardHeader className=\"border-bottom\">\n        <Row className=\"align-items-center\">\n          <Col xs={8}>\n            <CardTitle className={titleClassName}>{title}</CardTitle>\n          </Col>\n          <Col>\n            <ResetButton\n              chart={chart}\n              text={resetText}\n              className={resetClassName}\n            />\n          </Col>\n        </Row>\n      </CardHeader>\n      <CardBody className={className}>\n        <Div ref={div2} />\n        <Div ref={div1} />\n      </CardBody>\n    </Card>\n  );\n};\n\nChartTemplate.propTypes = {\n  chartFunction: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  reduxHandler: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  titleClassName: PropTypes.string,\n  resetClassName: PropTypes.string,\n  resetText: PropTypes.string,\n};\n\nChartTemplate.defaultProps = {\n  className: 'p-1',\n  titleClassName: '',\n  resetClassName: 'd-flex ml-auto',\n  resetText: 'Reset',\n};\n\nexport default ChartTemplate;\n","import React from 'react';\nimport * as dc from 'dc';\nimport PropTypes from 'prop-types';\nimport { scaleTime, utcHour, utcHours } from 'd3';\n\nimport LinkedChartsTemplate from './LinkedChartsTemplate';\n\nconst lineAndBarChartsFunc = ({ div1, div2, data }) => {\n  const dimension = data.dimension(d => d.hours, true);\n  const alertsGroup = dimension.group();\n  const interactionsGroup = dimension.group().reduceSum(d => d.interactions);\n\n  const volumeChart = dc.barChart(div1);\n\n  volumeChart\n    .height(80)\n    .margins({ top: 0, right: 50, bottom: 20, left: 40 })\n    .dimension(dimension)\n    .group(alertsGroup, 'Total Alerts')\n    .centerBar(true)\n    .gap(1)\n    .x(scaleTime().domain([new Date(2019, 11, 24), new Date(2019, 11, 30)]))\n    .round(utcHour.round)\n    .alwaysUseRounding(true)\n    .xUnits(utcHour);\n\n  const lineChart = dc.lineChart(div2);\n\n  lineChart\n    .dimension(dimension)\n    .mouseZoomable(false)\n    .rangeChart(volumeChart)\n    .transitionDuration(1000)\n    .x(scaleTime().domain([new Date(2019, 11, 24), new Date(2019, 11, 30)]))\n    .round(utcHour.round)\n    .xUnits(utcHours)\n    .elasticY(true)\n    .renderHorizontalGridLines(true)\n    .legend(\n      dc\n        .legend()\n        .x(800)\n        .y(10)\n        .itemHeight(13)\n        .gap(5)\n    )\n    .brushOn(false)\n    .group(interactionsGroup, 'Hourly Interactions');\n  /* .title(d => {\n      let value = d.value ? d.value.avg : d.value;\n      if (isNaN(value)) {\n        value = 0;\n      }\n      return `${dateFormat(d.key)}\\n${numberFormat(value)}`;\n    }); */\n  return [volumeChart, lineChart];\n};\n\nconst InteractionLineChart = ({ reduxHandler }) => (\n  <LinkedChartsTemplate\n    chartFunction={lineAndBarChartsFunc}\n    title=\"Hourly Alert Interactions\"\n    reduxHandler={reduxHandler}\n  />\n);\n\nInteractionLineChart.propTypes = {\n  reduxHandler: PropTypes.func.isRequired,\n};\n\nexport default InteractionLineChart;\n","import React from 'react';\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\nimport KeplerGl from 'kepler.gl';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody } from 'shards-react';\n\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_ACCESS_TOKEN; // eslint-disable-line\n\nconst KeplerMap = ({ id }) => {\n  return (\n    <Card className=\"h-100\">\n      <CardBody style={{ minHeight: '660px' }}>\n        <AutoSizer>\n          {({ height, width }) => (\n            <KeplerGl\n              mapboxApiAccessToken={MAPBOX_TOKEN}\n              id={id}\n              width={width}\n              height={height}\n            />\n          )}\n        </AutoSizer>\n      </CardBody>\n    </Card>\n  );\n};\n\nKeplerMap.propTypes = {\n  id: PropTypes.oneOf([PropTypes.string, PropTypes.number]).isRequired,\n};\n\nexport default KeplerMap;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n// import styled from 'styled-components';\n\nimport { DataContext } from '../DataContext';\nimport dataTemplate from '../../data/kepler-data-template';\nimport KeplerMap from '../KeplerMap';\nimport REDUX_ENUMS from '../../store/constants';\n\nfunction KeplerAlerts({ id, reduxHandler }) {\n  const { data } = useContext(DataContext);\n\n  useEffect(() => {\n    dataTemplate.data.rows = data.all().map(d => d.kepler);\n    reduxHandler(REDUX_ENUMS.KEPLER_MOUNT_ADD_DATA_TO_MAP, {\n      datasets: dataTemplate,\n      options: {\n        centerMap: true,\n      },\n    });\n  }, []);\n\n  return <KeplerMap id={id} />;\n}\n\nKeplerAlerts.propTypes = {\n  id: PropTypes.oneOf([PropTypes.string, PropTypes.number]).isRequired,\n  reduxHandler: PropTypes.func.isRequired,\n};\n\nexport default KeplerAlerts;\nexport { REDUX_ENUMS };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'shards-react';\n// import styled from 'styled-components';\n\nimport DayOfWeekChart from './DayOfWeekChart';\nimport HourOfDayChart from './HourOfDayChart';\nimport InteractionLineChart from './InteractionLineChart';\nimport KeplerAlerts from './KeplerAlerts';\n\n// const Div = styled.div`\n//   padding: 1rem;\n//   margin-top: 2rem;\n// `;\n\nconst DcCharts = ({ keplerId, reduxHandler }) => {\n  return (\n    <>\n      <Row className=\"mb-3\">\n        <Col sm={12} md={8} className=\"px-2\">\n          <Row style={{ height: '100%' }}>\n            <Col sm={12}>\n              <KeplerAlerts id={keplerId} reduxHandler={reduxHandler} />\n            </Col>\n          </Row>\n        </Col>\n        <Col md={4} sm={12} className=\"px-2\">\n          <Row className=\"mb-3\">\n            <Col sm={12}>\n              <DayOfWeekChart reduxHandler={reduxHandler} />\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={12}>\n              <HourOfDayChart reduxHandler={reduxHandler} />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      <Row className=\"mb-3\">\n        <Col sm={12}>\n          <InteractionLineChart reduxHandler={reduxHandler} />\n        </Col>\n      </Row>\n      <Row className=\"mb-3\" />\n      {/* <Row>\n        <Col md={7}>\n          <Row>\n            <Col md={12}>\n              <MoveChart />\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <GainOrLossChart />\n            </Col>\n            <Col md={6}>\n              <FluctuationChart />\n            </Col>\n\n            <Col md={6}>\n              <QuarterChart />\n            </Col>\n            <Col md={6} />\n          </Row>\n        </Col>\n        <Col\n          md={5}\n          style={{ overflowY: 'scroll', maxHeight: '70vh', width: '100%' }}\n        >\n          <DataTable />\n        </Col>\n      </Row> */}\n    </>\n  );\n};\n\nDcCharts.propTypes = {\n  keplerId: PropTypes.string.isRequired,\n  reduxHandler: PropTypes.func.isRequired,\n};\n\nexport default DcCharts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect, useDispatch } from 'react-redux';\nimport { forwardTo } from 'kepler.gl/actions';\nimport { Container, Row } from 'shards-react';\n\nimport REDUX_ENUMS from '../../store/constants';\nimport {\n  keplerMountAddData,\n  dcChartFilterKeplerData,\n  smallStatsFilterKeplerData,\n} from '../../store/actions';\n\n// import { Container } from './styles';\nimport PageTitle from '../../components/PageTitle';\nimport SmallStats from '../../components/SmallStats';\nimport DcCharts from '../../components/DcCharts';\n\nconst WeeklyReport = ({ city }) => {\n  const keplerId = `${city}-map`;\n  const dispatch = useDispatch();\n  const mapDispatch = forwardTo(keplerId, dispatch);\n\n  function reduxHandler(type, data) {\n    switch (type) {\n      case REDUX_ENUMS.KEPLER_MOUNT_ADD_DATA_TO_MAP:\n        keplerMountAddData({ mapDispatch, dispatch, data });\n        break;\n      case REDUX_ENUMS.DC_CHART_FILTER_KEPLER_DATA:\n        dcChartFilterKeplerData({ mapDispatch, dispatch, data });\n        break;\n      case REDUX_ENUMS.SMALL_STATS_FILTER_KEPLER_DATA:\n        smallStatsFilterKeplerData({ mapDispatch, dispatch, data });\n        break;\n      default:\n        break;\n    }\n  }\n\n  return (\n    <Container fluid className=\"main-content-container px-4\">\n      {/* Page Header */}\n      <Row noGutters className=\"page-header py-2\">\n        <PageTitle\n          title={city}\n          subtitle=\"Weekly Report\"\n          className=\"text-sm-left mb-3\"\n        />\n      </Row>\n\n      {/* Small Stats Blocks */}\n      <SmallStats reduxHandler={reduxHandler} />\n\n      <DcCharts keplerId={keplerId} reduxHandler={reduxHandler} />\n    </Container>\n  );\n};\n\nWeeklyReport.propTypes = {\n  city: PropTypes.string.isRequired,\n};\n\nexport default connect()(WeeklyReport);\n","import { addDataToMap } from 'kepler.gl/actions';\n\nimport REDUX_ENUMS from './constants';\n\nexport function keplerMountAddData({ mapDispatch, dispatch, data }) {\n  dispatch({ type: REDUX_ENUMS.KEPLER_MOUNT_ADD_DATA_TO_MAP });\n  mapDispatch(addDataToMap(data));\n}\n\nexport function dcChartFilterKeplerData({ mapDispatch, dispatch, data }) {\n  dispatch({ type: REDUX_ENUMS.DC_CHART_FILTER_KEPLER_DATA });\n  mapDispatch(addDataToMap(data));\n}\n\nexport function smallStatsFilterKeplerData({ mapDispatch, dispatch, data }) {\n  dispatch({ type: REDUX_ENUMS.SMALL_STATS_FILTER_KEPLER_DATA });\n  mapDispatch(addDataToMap(data));\n}\n","import React from 'react';\nimport { Switch, Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport DefaultLayout from './layouts';\nimport WeeklyReport from './pages/WeeklyReport';\nimport { DataProvider } from './components/DataContext';\nimport { getLastSunday, getSundayBefore} from './utils';\n\nconst baseUrl = 'https://hugo-data.s3.us-east-2.amazonaws.com';\n\nexport default function Routes({ cities }) {\n  var lastSunday = getLastSunday();\n\n  if (new Date() < lastSunday){\n    lastSunday = getSundayBefore(lastSunday);\n  }\n\n  const prefix = `${baseUrl}/${lastSunday.toJSON().slice(0,10).replace(/-/g,'/')}/`;\n\n  return (\n    <Switch>\n      <Redirect exact from=\"/\" to=\"/miraflores\" />\n      {cities.map(city => (\n        <Route key={city.id} path={city.path}>\n          <DataProvider url={prefix + city.fileName} aggFile={city.aggFile}>\n            <DefaultLayout>\n              <WeeklyReport city={city.name} />\n            </DefaultLayout>\n          </DataProvider>\n        </Route>\n      ))}\n    </Switch>\n  );\n}\n\nRoutes.propTypes = {\n  cities: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      path: PropTypes.string,\n      name: PropTypes.string,\n      fileName: PropTypes.string,\n      aggFile: PropTypes.string,\n    })\n  ),\n};\n\nRoutes.defaultProps = {\n  cities: [\n    {\n      id: 1,\n      path: '/miraflores',\n      name: 'Miraflores',\n      fileName: 'Miraflores/ALERTS.csv',\n      aggFile: 'MirafloresAgg.json',\n    },\n    {\n      id: 2,\n      path: '/montevideo',\n      name: 'Montevideo',\n      fileName: 'Montevideo/ALERTS.csv',\n      aggFile: 'MontevideoAgg.json',\n    },\n    { id: 3, path: '/quito', name: 'Quito', fileName: 'Quito/ALERTS.csv', aggFile: 'QuitoAgg.json', },\n    {\n      id: 4,\n      path: '/sao-paulo',\n      name: 'São Paulo',\n      fileName: 'SaoPaulo/ALERTS.csv',\n      aggFile: 'SaoPauloAgg.json',\n    },\n    {\n      id: 5,\n      path: '/xalapa',\n      name: 'Xalapa',\n      fileName: 'Xalapa/ALERTS.csv',\n      aggFile: 'XalapaAgg.json',\n    },\n  ],\n};\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  html, body, #root {\n    min-height: 100%;\n  }\n\n  body {\n    -webkit-font-smoothing: antialiased !important;\n  }\n\n  body, input, button {\n    color: #222;\n    font-size: 14px;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport './config/ReactotronConfig';\n\nimport Routes from './routes';\nimport GlobalStyle from './styles/global';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/shards-dashboards.1.1.0.min.css';\n\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter basename=\"/cities-reports\">\n        <Routes />\n        <GlobalStyle />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}